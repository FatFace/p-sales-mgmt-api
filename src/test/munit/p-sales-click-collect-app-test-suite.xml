<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="p-sales-click-collect-app-test-suite.xml" />
	<import doc:name="Import" doc:id="05b87053-24d5-4117-a691-529b4e60b821" file="test-globals.xml" />
	<munit:test name="p-sales-click-collect-app-test-suite-impl-flowTest"
		description="Test" doc:id="e4c05c85-5793-4ab2-bfb3-dc2d552d8bf2">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Invoke System Layer of DW API to Put Stores"
				doc:id="8399f7a9-a6cc-4412-b45d-79a7e728dd99" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						attributeName="doc:name" whereValue="Invoke System Layer of DW API to Put Stores" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value='#[MunitTools::getResourceAsString("sample_data/put-stores-response.xml")]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy" doc:id="8b5e467b-4e77-42bb-8e46-1d3c3a777909" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer of DW API to Put Stores" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<set-variable value="#[MunitTools::getResourceAsString('sample_data/stores-request.json')]" doc:name="Set Variable" doc:id="7199b8b6-4254-46cd-9862-b77f89dd8894" variableName="storesRequest" mimeType="application/json"/>
					<ee:transform doc:name="Transform Message" doc:id="180f9adf-843d-4e8e-96a7-7b21980f9241">
						<ee:message>
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="storesRequest" ><![CDATA[%dw 2.0
output application/json
---
vars.storesRequest]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<munit-tools:assert-equals doc:name="Assert equals" doc:id="532fffa1-319c-43e7-9a9d-8f15cb78b09a" actual="#[output application/java --- write(payload,'application/json')]" expected="#[output application/java --- write(vars.storesRequest, 'application/json')]"/>
				</munit-tools:before-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<set-payload doc:name="Set Payload" doc:id="39847a23-4986-4daf-9a06-d6c9ec55dcda" value='#[MunitTools::getResourceAsString("sample_data/put-stores-request.json")]' mimeType="application/json"/>
			<ee:transform doc:name="Transform Message" doc:id="0f4b4a9e-4888-47ce-b69a-3c22f8aa22c3" >
				<ee:message >
					<ee:set-attributes ><![CDATA[%dw 2.0
output application/json
---
{
	"uriParams":{
	"store-id": "0001"
	}
}]]></ee:set-attributes>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="put:\stores\(store-id):p-sales-mgmt-api-config" doc:id="deefcef2-7d52-43c4-9834-5327aebfbd5a" name="put:\stores\(store-id):p-sales-mgmt-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="9b64d637-6dac-437d-ac6e-dc5f8a9756b7" expression="#[message.attributes.httpStatus == 200]" is="#[MunitTools::notNullValue()]"/>
			<munit-tools:verify-call doc:name="Verify call" doc:id="656d153b-b254-411c-9d0a-192e267ae338" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer of DW API to Put Stores" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>	
</mule>
