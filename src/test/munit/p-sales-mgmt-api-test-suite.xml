<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="p-sales-mgmt-api-test-suite.xml" />
	<import doc:name="Import" doc:id="05b87053-24d5-4117-a691-529b4e60b821" file="test-globals.xml" />
	<munit:test name="p-sales-mgmt-api-test-suite-post:\stores:application\json:p-sales-mgmt-api-configTest" description="Test" doc:id="026d0f00-01fc-4b77-912d-d3557faabe1d" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Invoke System Layer of DW API to Put Stores" doc:id="77334890-2001-420e-a240-6c3b3464e2d9" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer of DW API to Put Stores" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sample_data/stores-hours-response.xml')]" mediaType="application/xml" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="0ae5105b-345c-4e79-a58e-4a9cc88185a1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer Lookup Api to Get Lookup Key" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sample_data/db-lookup-data.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-payload value="#[MunitTools::getResourceAsString('sample_data/stores-hours-request.json')]" doc:name="Set Payload" doc:id="815ce5d1-76d4-4046-b2f5-89562e56d111" mimeType="application/json"/>
			<flow-ref doc:name="Flow-ref to post:\stores:application\json:p-sales-mgmt-api-config" doc:id="932a4717-b674-4e6d-abad-81749e047dd5" name="post:\stores:application\json:p-sales-mgmt-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="5945732b-e0fe-48ae-b794-3c52482b8616" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>


</mule>
